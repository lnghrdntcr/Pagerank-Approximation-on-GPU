#pragma once

#define V 16
#define G_SIZE (V * V)
#define E 116 // Number of non-zero entries in G;

// A sample graph, with 2 dangling vertices and 2 vertices with no outgoing edges;
int G[G_SIZE] = {
    1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,
    0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1,
    0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
    0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0,
    1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,
    1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,
    1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,
    1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,
    1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
    1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,
    0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1,
    0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1};

// Correct PageRank values;
float gold_pagerank[V] = {0.06268058, 0.01716495, 0.07738472, 0.07497738, 0.09036728,
                          0.07345194, 0.05056142, 0.0754754, 0.04562074, 0.06238981,
                          0.08272048, 0.05937358, 0.01716495, 0.07165696, 0.06823651,
                          0.07077331};

// CSC representation of the graph;

// Indices, on each column, of non-zero entries;
int g_indices[E] = {0, 6, 7, 8, 9, 10, 11, 14, 0, 1, 4, 5, 7, 11, 14, 15, 0,
                      1, 2, 4, 5, 6, 7, 8, 14, 0, 1, 2, 4, 5, 6, 7, 9, 10,
                      11, 14, 0, 2, 4, 7, 8, 9, 11, 12, 14, 2, 5, 7, 8, 10, 0,
                      1, 2, 4, 7, 8, 10, 11, 12, 14, 0, 1, 6, 7, 8, 10, 0, 1,
                      6, 7, 10, 11, 15, 0, 2, 7, 8, 9, 10, 11, 12, 14, 15, 0, 1,
                      2, 5, 7, 9, 10, 1, 2, 5, 6, 8, 9, 10, 11, 14, 0, 4, 5,
                      6, 7, 8, 9, 12, 0, 1, 8, 9, 10, 11, 12, 14, 15};

// Cumulative number of non-zero values in each colum, computed as:
// nnz[col_i] = g_indptr[i+1] - g_indptr[i];
int g_ptr[V + 1] = {0, 8, 8, 16, 25, 36, 45, 50, 60, 66, 73, 83, 90,
                       90, 99, 107, 116};

// Weight of each edge, always equal to 1;
float g_data[E] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};